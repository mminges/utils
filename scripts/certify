#!/bin/bash

function fn_usage() {

echo -en "\nUsage: "
basename $0
cat <<EOF
          -c <domain:port>      Show contents of server cert

          -f <file>             Convert a crt, csr, or key to either single or multiline format

          -o <file>             Output info of crt, csr, or key

          -v <cert> <ca_cert>   Verify whether a Certificate is signed by a given CA Certificate 

          -m <cert> <key>       Verify that a Certificate and Key are matching

EOF
exit
}

# Convert certificate to either a single or multiline certificate 
function fn_convert () {
  # Check file format
  FILE_FORMAT=$(sed -n 's/.*\(\\r\\n\).*/\1/p' $file)
#  FILE_FORMAT=$(sed -n 's/.*\(\\n\).*/\1/p' $file)
  if [[ $FILE_FORMAT == "\r\n" ]]; then
#  if [[ $FILE_FORMAT == "\n" ]]; then
    # Converting single-line certificate to multi-line certificate
    echo -e "\n"
    awk '{gsub("\\\\r\\\\n","\n")};1' $file
#    awk '{gsub("\\\\n","\n")};1' $file
    echo -e "\n"
  else
    # Converting multi-line certificate to single-line certificate
    echo -e "\n"
    sed 's/$/\\r\\n/' $file | tr -d "\n" | sed 's/.\{4\}$//'
    echo -e "\n"
  fi
}

function fn_connect() {

  echo "Connecting to domain and outputting crt info"
  if [[ ! $fqdn == *":"* ]]; then
    echo "Requires format FQDN:PORT"
    exit
  fi

  echo | openssl s_client -connect $fqdn 2>/dev/null | openssl x509 -noout -text
}

function fn_output () {
  FILE_CONTENT=$(sed -n 1p $file)
  if [[ $FILE_CONTENT == *"CERTIFICATE-----"* ]]; then
    openssl x509 -in $file -noout -text
  elif [[ $FILE_CONTENT == *"KEY-----"* ]]; then
    openssl rsa -in $file -noout -text
  elif [[ $FILE_CONTENT == *"REQUEST-----"* ]]; then
    openssl req -in $file -noout -text
  else
    echo -e "Unable to determine whether $file is a crt, key, or csr"
  fi
}

function fn_verify () {
  openssl verify -verbose -CAfile $ca_cert $cert
}

function fn_verify_modulus () {
  openssl x509 -noout -modulus -in $cert | openssl md5
  openssl rsa -noout -modulus -in $key | openssl md5  
}

action=$1

case "$action" in

-c)
    fqdn=$2
    if [ $# -ne 2 ]; then
        echo -e "\nDo you have the right number of arguments?\n"
        fn_usage
    fi
    fn_connect
    ;;
-f) echo "Converting file into either multiline or singleline format"
    file=$2
    if [ $# -ne 2 ]; then
        echo -e "\nDo you have the right number of arguments?\n"
        fn_usage
    fi
    fn_convert
    ;;
-o) echo "Outputing crt, key, or csr info"
    file=$2
    if [ $# -ne 2 ]; then
        echo "\nDo you have the right number of arguments?\n"
        fn_usage
    fi
    fn_output
    ;;
-v) echo -e "Verifying $2 is signed by $3"
    cert=$2
    ca_cert=$3
    if [ $# -ne 3 ]; then
        echo "\nDo you have the right number of arguments?\n"
        fn_usage
    fi
    fn_verify
    ;;
-m) echo -e "Verifying whether $2 and $3 are matching Certificate and Key Pairs"
    cert=$2
    key=$3
    if [ $# -ne 3 ]; then
        echo "\nDo you have the right number of arguments?\n"
        fn_usage
    fi
    fn_verify_modulus
    ;;
*)
   fn_usage
   ;;
esac
